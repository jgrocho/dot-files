#!/usr/bin/env python

import sys, getopt

try:
    import gnomekeyring as gk
except ImportError:
    print >> sys.stderr, "Could not load gnomekeyring library."
    exit(3)

PROGRAM_NAME='gnome-keyring-helper'
DEFAULT_KEYRING='login'

def main(argv):
    try:
        opts, args = getopt.getopt(argv, 'n')
    except getopt.GetoptError, err:
        print str(err)
        usage()
        exit(2)

    if len(args) < 1:
        usage()
        exit(2)

    newline = True
    for o, a in opts:
        if o == '-n':
            newline = False
        else:
            assert False, "unhandled option"

    name = args[0]

    keyring = args[1] if len(args) > 2 else DEFAULT_KEYRING

    secret = get_secret(keyring, name)
    if secret:
        sys.stdout.write(secret)
        if newline: sys.stdout.write('\n')
    else:
        print >> sys.stderr, "Could not find secret '%(name)s' in '%(keyring)s'" % { 'name': name, 'keyring': keyring }
        exit(1)

def get_secret(keyring, name):
    try:
        keys = gk.list_item_ids_sync(keyring)
    except gk.NoSuchKeyringError, err:
        return None

    for key in keys:
        try:
            item = gk.item_get_info_sync(keyring, key)
        except gk.BadArgumentsError, err:
            assert False, "bad key"
        if item.get_display_name() == name:
            return item.get_secret()

    return None

def usage():
    print >> sys.stderr, """%(program_name)s [-n] NAME [KEYRING]
    You must specifiy the NAME of the password/key to lookup.
    You may optionally specifiy a KEYRING to use, the default is '%(default_keyring)s'.
    If -n is given no newline is printed after the password/key.""" % { 'program_name': PROGRAM_NAME, 'default_keyring': DEFAULT_KEYRING}

def exit(code):
    sys.exit(code)

if __name__ == '__main__':
    PROGRAM_NAME=sys.argv[0]
    main(sys.argv[1:])
